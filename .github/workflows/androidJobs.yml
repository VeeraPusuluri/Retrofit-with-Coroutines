name: android tests, builds checks

on:
  push:
    branches: [master]
  pull_request: 
    branches: [master]
  workflow_dispatch:
    
jobs:

#  lint:
#    runs-on: ubuntu-latest
#    steps:
#     - name: check out code 
#       uses: actions/checkout@v2
      
#     - name: build application with gradle
#       run: ./gradlew lintDebug
      
#     - name: upload artifact
#       uses: actions/upload-artifact@v2
#       with:
#         name: build results
#         path: app/build/reports/lint-results-debug.html
        
#  unit-test:
#     needs: [lint]
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout the code
#         uses: actions/checkout@v2

#       - name: Run tests
#         run: ./gradlew test

#       - name: Upload test report
#         uses: actions/upload-artifact@v2
#         with:
#           name: unit_test_report
#           path: app/build/reports/tests/testDebugUnitTest/
       
     
#  instrumentation-test:
#     needs: [unit-test]
#     runs-on: macos-latest
#     steps:
#      - name: checkout
#        uses: actions/checkout@v3
       
#      - name: setup java 11
#        uses: actions/setup-java@v1
#        with:
#         java-version: 11

#      - name: run tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck
       
#  static-code-analysis:
#    runs-on: ubuntu-latest
#    steps:
#        - name: checkout code
#          uses: actions/checkout@v2
#          with:
#           fetch-depth: 0

#        - name: setup jdk 11
#          uses: actions/setup-java@v1
#          with:
#           java-version: 11

#        - name: Cache SonarQube packages
#          uses: actions/cache@v1
#          with:
#            path: ~/.sonar/cache
#            key: ${{ runner.os }}-sonar
#            restore-keys: ${{ runner.os }}-sonar
#        - name: Cache Gradle packages
#          uses: actions/cache@v1
#          with:
#            path: ~/.gradle/caches
#            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#            restore-keys: ${{ runner.os }}-gradle
#        - name: Build and analyze
#          env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#          run: ./gradlew build sonarqube --info
         
         
 package:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: setup java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: create package
        run: ./gradlew assembleDebug --stacktrace

      - name: Build file
        uses: actions/upload-artifact@v2
        with:
          name: retrofit-with-coroutines
          path: app/build/outputs/apk/debug/app-debug.apk
          

 upload-apk-firebase: 
    needs: [package]
    runs-on: ubuntu-latest
    steps:
      - name: downlaod stored artifact
        uses: actions/download-artifact@v2
        with:
           name: retrofit-with-coroutines
           
      - name: upload apk to firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: retrofit-with-coroutines-testers
          file: app-debug.apk
        
           

          

 
        
        
    

    
  
   
   
  

  
  
